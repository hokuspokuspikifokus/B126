
#include <PID_v1.h>
#define sensor A0
double Kp =2.4187, Ki = 1, Kd = 0;
double setpoint;
int const htcstPin = 2; //Pin til tcst pin
int const vtcstPin = 3; //Pin til tcst pin
int const hvcc = 5;
int const hgnd = 4;
int const vvcc = 7;
int const vgnd = 6;
int const motorH = 10; //Pin til højre motor
int const motorV = 11; //Pin til venstre motor
double hjulhhastighedH;
double hjulhhastighedV;
float const cm = 0.53; //Længde fra hul til hul
float htid = 0; //Start tid
float htidEfter = 0;//Slut tid
float vtid = 0; //Start tid
float vtidEfter = 0;//Slut tid
float hsamples[5]; //array til hsamples der skal gemmes
float vsamples[5];//array til vsamples der skal gemmes
double hgennemsnit = 0; //Gennemsnit til udregning af hhastighed
double vgennemsnit = 0; //gns for vhastighed
double hhast = 0; // Gennemsnits hhastighed
double vhast = 0; // Gennemsnits hhastighed
double vinput; // Gennemsnits hhastighed
double hinput; // Gennemsnits hhastighed
int yh = 0;
int yv = 0;
int tk = 0 ; // tidskonstant
int t = 0;
float htgns = 0;
float vtgns = 0;
 

PID B126H(&hinput, &hjulhhastighedH, &setpoint, Kp, Ki, Kd, DIRECT);
PID B126V(&vinput, &hjulhhastighedV, &setpoint, Kp, Ki, Kd, DIRECT);

 
void hinter()
{
  
  
 
 
htidEfter = htid;


  
  /*
  htid = millis();
  hsamples[4] = hsamples[3];
  hsamples[3] = hsamples[2];
  hsamples[2] = hsamples[1];
  hsamples[1] = hsamples[0];
  hsamples[0] = htid - htidEfter;
  gennemsnit = ((hsamples[0] + hsamples[1] + hsamples[2] + hsamples[3] + hsamples[4]) / 5);
  htidEfter = htid;
  hhast = (cm / gennemsnit) * 1000;
  */
}

void vinter()
{
  
  
  
  
vtidEfter = vtid;



  
  /*
  vtid = millis();
  vsamples[4] = vsamples[3];
  vsamples[3] = vsamples[2];
  vsamples[2] = vsamples[1];
  vsamples[1] = vsamples[0];
  vsamples[0] = vtid - vtidEfter;
  gennemsnit = ((vsamples[0] + vsamples[1] + vsamples[2] + vsamples[3] + vsamples[4]) / 5);
  vtidEfter = vtid;
  vhast = (cm / gennemsnit) * 1000;
*/
}

void setup() {
  setpoint = 20;
  Serial.begin(9600); // set up Serial library at 9600 bps
  pinMode(motorH, OUTPUT);  // sets the pin as output
  pinMode(motorV, OUTPUT);  // sets the pin as output
  pinMode(hgnd, OUTPUT);
  pinMode(hvcc, OUTPUT);
  pinMode(vgnd, OUTPUT);
  pinMode(vvcc, OUTPUT);
  digitalWrite(hvcc, HIGH);
  digitalWrite(hgnd, LOW);
  digitalWrite(vvcc, HIGH);
  digitalWrite(vgnd, LOW);
  attachInterrupt((digitalPinToInterrupt(htcstPin)), hinter, CHANGE);
  attachInterrupt((digitalPinToInterrupt(vtcstPin)), vinter, CHANGE);
  B126H.SetMode(AUTOMATIC);
  B126V.SetMode(AUTOMATIC);
  B126V.SetTunings(Kp, Ki, Kd);
  B126H.SetTunings(Kp, Ki, Kd); 
  B126V.SetSampleTime(200);
  B126H.SetSampleTime(200);
}
void loop() 
{
vtid = millis();
htid = millis();
    
  hsamples[4] = hsamples[3];
  hsamples[3] = hsamples[2];
  hsamples[2] = hsamples[1];
  hsamples[1] = hsamples[0];
  hsamples[0] = htid - htidEfter;
  htgns = htid - htidEfter ;
  hgennemsnit = ((hsamples[0] + hsamples[1] + hsamples[2] + hsamples[3] + hsamples[4]) / 5);
  hhast = (cm / hgennemsnit) * 1000;

  vsamples[4] = vsamples[3];
  vsamples[3] = vsamples[2];
  vsamples[2] = vsamples[1];
  vsamples[1] = vsamples[0];
  vsamples[0] = vtid - vtidEfter;
  vtgns = vtid - vtidEfter ;
  vgennemsnit = ((vsamples[0] + vsamples[1] + vsamples[2] + vsamples[3] + vsamples[4]) / 5);
  vhast = (cm / vgennemsnit) * 1000;
    
    Serial.println(vhast);
      
   
    hinput = hhast;
    vinput = vhast;

    B126V.Compute();
    B126H.Compute();
    analogWrite(motorH, hjulhhastighedH);
    analogWrite(motorV, hjulhhastighedV);
    
   // Serial.println(vhast);
    //Serial.print(" cm/s ");
    //Serial.print("  :  ");
    //Serial.print(hhast);
    //Serial.println(" cm/s");
    
    // Serial.print("      :      ");
    //Serial.print(hhast);
    //Serial.println(" cm/s");

//delay(20);
  
  
}




//1,06 pr hak og 0,53 pr ændring
//Huller ved motorer 20
//Længde rundt om hjul 21,2
